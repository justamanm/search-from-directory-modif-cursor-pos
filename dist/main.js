/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var f=Object.create;var o=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var I=Object.getPrototypeOf,M=Object.prototype.hasOwnProperty;var h=e=>o(e,"__esModule",{value:!0});var P=(e,t)=>{h(e);for(var a in t)o(e,a,{get:t[a],enumerable:!0})},T=(e,t,a)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of b(t))!M.call(e,n)&&n!=="default"&&o(e,n,{get:()=>t[n],enumerable:!(a=m(t,n))||a.enumerable});return e},k=e=>T(h(o(e!=null?f(I(e)):{},"default",e&&e.__esModule&&"default"in e?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e);var p=(e,t,a)=>new Promise((n,i)=>{var u=s=>{try{c(a.next(s))}catch(r){i(r)}},g=s=>{try{c(a.throw(s))}catch(r){i(r)}},c=s=>s.done?n(s.value):Promise.resolve(s.value).then(u,g);c((a=a.apply(e,t)).next())});P(exports,{default:()=>d});var l=k(require("obsidian")),d=class extends l.Plugin{onload(){return p(this,null,function*(){this.registerEvent(this.app.workspace.on("file-menu",(t,a)=>{a instanceof l.TFolder&&t.addItem(n=>{n.setTitle("Search in folder").setIcon("search").onClick(()=>{let i=a.path;this.app.internalPlugins.getPluginById("global-search").instance.openGlobalSearch(`path:"${i}" tag:task/todo`)})})}))})}};
